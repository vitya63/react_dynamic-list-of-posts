{"version":3,"sources":["api.js","components/Comment.js","components/CommentList.js","components/User.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["loadData","_callee2","url","regenerator_default","a","wrap","_context2","prev","next","abrupt","fetch","then","response","json","stop","getPostsWithDependencies","_ref","Object","asyncToGenerator","mark","_callee","postList","userList","commentList","_context","sent","map","post","_objectSpread","comments","filter","comment","postId","id","user","find","userId","apply","this","arguments","Comment","_ref$comment","name","email","body","react_default","createElement","className","concat","href","CommentList","components_Comment","key","User","address","suite","street","city","Post","title","components_User","components_CommentList","PostList","state","inputValue","handleInputChange","e","_this","setState","target","value","posts","props","filteredPosts","toConsumableArray","includes","Fragment","htmlFor","type","onChange","components_Post","React","Component","App","isLoading","hasError","loadPosts","catch","finally","_this$state","onClick","length","components_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a3bf5110.chunk.js","sourcesContent":["const POSTS_URL = 'https://jsonplaceholder.typicode.com/posts';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nconst COMMENTS_URL = 'https://jsonplaceholder.typicode.com/comments';\n\nasync function loadData(url) {\n  return fetch(url).then(response => response.json());\n}\n\nconst getPostsWithDependencies = async () => {\n  const postList = await loadData(POSTS_URL);\n  const userList = await loadData(USERS_URL);\n  const commentList = await loadData(COMMENTS_URL);\n\n  return postList.map(post => (\n    {\n      ...post,\n      comments: commentList.filter(comment => comment.postId === post.id),\n      user: userList.find(user => user.id === post.userId),\n    }\n  ));\n};\n\nexport default getPostsWithDependencies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment: { name, email, body } }) => (\n  <li className=\"nestedUl\">\n    <div>{body}</div>\n    <div>{`Author: ${name}`}</div>\n    <a href={`mailto: ${email}`}>\n      {`Email ${name}`}\n    </a>\n  </li>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <ul>\n    <h3>Comments</h3>\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))}\n  </ul>\n);\n\nCommentList.propTypes = {\n  comments: Proptypes.arrayOf(Proptypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div>\n    <p>\n      Author:\n      {user.name}\n    </p>\n    <p>\n      {`\n        Author lives at ${user.address.suite}\n        on ${user.address.street} street\n        in ${user.address.city}\n      `}\n    </p>\n    <p>\n      <a href={`mailto: ${user.email}`}>\n        {`Email ${user.name}`}\n      </a>\n    </p>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    user: PropTypes.object,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CommentList from './CommentList';\nimport User from './User';\n\nconst Post = ({ post }) => (\n  <li>\n    <h2>{post.title}</h2>\n    <p>{post.body}</p>\n    <User user={post.user} />\n    <CommentList comments={post.comments} />\n  </li>\n);\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.object,\n    comments: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nclass PostList extends React.Component {\n  state = {\n    inputValue: '',\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  }\n\n  render() {\n    const { posts } = this.props;\n    const { inputValue } = this.state;\n    let filteredPosts = null;\n\n    !inputValue\n      ? filteredPosts = [...posts]\n      : filteredPosts = [...posts].filter(\n        post => post.title.includes(inputValue)\n          || post.body.includes(inputValue)\n      );\n\n    return (\n      <>\n        <h1>POSTS</h1>\n        <label htmlFor=\"filter-posts\">Filter the posts: </label>\n        <input\n          type=\"text\"\n          onChange={this.handleInputChange}\n          value={inputValue}\n          id=\"filter-posts\"\n        />\n        <ul>\n          {filteredPosts.map(post => (\n            <Post post={post} key={post.id} />\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\n\nimport getPostsWithDependencies from './api';\nimport PostList from './components/PostList';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    isLoading: false,\n    hasError: false,\n  }\n\n  loadPosts = () => {\n    this.setState({\n      isLoading: true,\n      hasError: false,\n    });\n\n    getPostsWithDependencies()\n      .then((posts) => {\n        this.setState({ posts });\n      })\n      .catch(() => {\n        this.setState({ hasError: true });\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  }\n\n  render() {\n    const { posts, isLoading, hasError } = this.state;\n\n    if (isLoading) {\n      return <button type=\"button\">Loading...</button>;\n    }\n\n    if (hasError) {\n      return (\n        <>\n          <p>Error occurred</p>\n          <button type=\"button\" onClick={this.loadPosts}>\n            Try again\n          </button>\n        </>\n      );\n    }\n\n    if (!posts.length) {\n      return (\n        <button type=\"button\" onClick={this.loadPosts}>\n          Load\n        </button>\n      );\n    }\n\n    return <PostList posts={posts} />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}