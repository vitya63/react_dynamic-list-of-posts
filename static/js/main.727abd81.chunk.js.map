{"version":3,"sources":["api.js","components/Comment.js","components/CommentList.js","components/User.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["getPostsWithDependencies","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","postList","userList","commentList","wrap","_context","prev","next","fetch","then","response","json","sent","abrupt","map","post","_objectSpread","comments","filter","comment","postId","id","user","find","userId","stop","apply","this","arguments","Comment","_ref$comment","name","email","body","react_default","createElement","className","concat","href","CommentList","components_Comment","key","User","address","suite","street","city","Post","title","components_User","components_CommentList","PostList","state","inputValue","handleInputChange","e","_this","setState","target","value","posts","props","filteredPosts","toConsumableArray","includes","Fragment","htmlFor","type","onChange","components_Post","React","Component","App","isLoading","hasError","loadPosts","catch","finally","_this$state","onClick","length","components_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.727abd81.chunk.js","sourcesContent":["const POSTS_URL = 'https://jsonplaceholder.typicode.com/posts';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nconst COMMENTS_URL = 'https://jsonplaceholder.typicode.com/comments';\n\nconst getPostsWithDependencies = async () => {\n  const postList = await fetch(POSTS_URL)\n    .then(response => response.json());\n  const userList = await fetch(USERS_URL)\n    .then(response => response.json());\n  const commentList = await fetch(COMMENTS_URL)\n    .then(response => response.json());\n\n  return postList.map(post => (\n    {\n      ...post,\n      comments: commentList.filter(comment => comment.postId === post.id),\n      user: userList.find(user => user.id === post.userId),\n    }\n  ));\n};\n\nexport default getPostsWithDependencies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment: { name, email, body } }) => (\n  <li className=\"nestedUl\">\n    <div>{body}</div>\n    <div>{`Author: ${name}`}</div>\n    <a href={`mailto: ${email}`}>\n      {`Email ${name}`}\n    </a>\n  </li>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <ul>\n    <h3>Comments</h3>\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))}\n  </ul>\n);\n\nCommentList.propTypes = {\n  comments: Proptypes.arrayOf(Proptypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div>\n    <p>\n      Author:\n      {user.name}\n    </p>\n    <p>\n      {`\n        Author lives at ${user.address.suite}\n        on ${user.address.street} street\n        in ${user.address.city}\n      `}\n    </p>\n    <p>\n      <a href={`mailto: ${user.email}`}>\n        {`Email ${user.name}`}\n      </a>\n    </p>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    user: PropTypes.object,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CommentList from './CommentList';\nimport User from './User';\n\nconst Post = ({ post }) => (\n  <li>\n    <h2>{post.title}</h2>\n    <p>{post.body}</p>\n    <User user={post.user} />\n    <CommentList comments={post.comments} />\n  </li>\n);\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.object,\n    comments: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nclass PostList extends React.Component {\n  state = {\n    inputValue: '',\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  }\n\n  render() {\n    const { posts } = this.props;\n    const { inputValue } = this.state;\n    let filteredPosts = null;\n\n    !inputValue\n      ? filteredPosts = [...posts]\n      : filteredPosts = [...posts].filter(\n        post => post.title.includes(inputValue)\n          || post.body.includes(inputValue)\n      );\n\n    return (\n      <>\n        <h1>POSTS</h1>\n        <label htmlFor=\"filter-posts\">Filter the posts: </label>\n        <input\n          type=\"text\"\n          onChange={this.handleInputChange}\n          value={inputValue}\n          id=\"filter-posts\"\n        />\n        <ul>\n          {filteredPosts.map(post => (\n            <Post post={post} key={post.id} />\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\n\nimport getPostsWithDependencies from './api';\nimport PostList from './components/PostList';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    isLoading: false,\n    hasError: false,\n  }\n\n  loadPosts = () => {\n    this.setState({\n      isLoading: true,\n      hasError: false,\n    });\n\n    getPostsWithDependencies()\n      .then((posts) => {\n        this.setState({ posts });\n      })\n      .catch(() => {\n        this.setState({ hasError: true });\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  }\n\n  render() {\n    const { posts, isLoading, hasError } = this.state;\n\n    if (isLoading) {\n      return <button type=\"button\">Loading...</button>;\n    }\n\n    if (hasError) {\n      return (\n        <>\n          <p>Error occurred</p>\n          <button type=\"button\" onClick={this.loadPosts}>\n            Try again\n          </button>\n        </>\n      );\n    }\n\n    if (!posts.length) {\n      return (\n        <button type=\"button\" onClick={this.loadPosts}>\n          Load\n        </button>\n      );\n    }\n\n    return <PostList posts={posts} />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}